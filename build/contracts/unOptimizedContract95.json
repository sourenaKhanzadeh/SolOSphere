{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "123": "contracts/verifiable_contracts_gpt/UnOptimizedContract95.sol"
  },
  "ast": {
    "absolutePath": "contracts/verifiable_contracts_gpt/UnOptimizedContract95.sol",
    "exportedSymbols": {
      "unOptimizedContract95": [
        4664
      ]
    },
    "id": 4665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4599,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:123"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4664,
        "linearizedBaseContracts": [
          4664
        ],
        "name": "unOptimizedContract95",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4601,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 4664,
            "src": "62:13:123",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4600,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "62:7:123",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4603,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "scope": 4664,
            "src": "81:19:123",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4602,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "81:4:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4615,
              "nodeType": "Block",
              "src": "128:56:123",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4606,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4601,
                      "src": "138:5:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4830,
                        "src": "146:3:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "146:10:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "138:18:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4610,
                  "nodeType": "ExpressionStatement",
                  "src": "138:18:123"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4611,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "166:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "176:1:123",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "166:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4614,
                  "nodeType": "ExpressionStatement",
                  "src": "166:11:123"
                }
              ]
            },
            "documentation": null,
            "id": 4616,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "118:2:123"
            },
            "returnParameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "128:0:123"
            },
            "scope": 4664,
            "src": "107:77:123",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4631,
              "nodeType": "Block",
              "src": "224:69:123",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4620,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4830,
                            "src": "242:3:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "242:9:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "254:1:123",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "242:13:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4833,
                        4834
                      ],
                      "referencedDeclaration": 4833,
                      "src": "234:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "234:22:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4625,
                  "nodeType": "ExpressionStatement",
                  "src": "234:22:123"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4626,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "266:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4627,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4830,
                        "src": "277:3:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "277:9:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "266:20:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4630,
                  "nodeType": "ExpressionStatement",
                  "src": "266:20:123"
                }
              ]
            },
            "documentation": null,
            "id": 4632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:2:123"
            },
            "returnParameters": {
              "id": 4618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:0:123"
            },
            "scope": 4664,
            "src": "190:103:123",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4662,
              "nodeType": "Block",
              "src": "337:145:123",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4638,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4634,
                          "src": "355:6:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4639,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4603,
                          "src": "365:7:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "355:17:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4833,
                        4834
                      ],
                      "referencedDeclaration": 4833,
                      "src": "347:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "347:26:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4642,
                  "nodeType": "ExpressionStatement",
                  "src": "347:26:123"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4644,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4830,
                            "src": "391:3:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "391:10:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4646,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4601,
                          "src": "405:5:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "391:19:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4833,
                        4834
                      ],
                      "referencedDeclaration": 4833,
                      "src": "383:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "383:28:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4649,
                  "nodeType": "ExpressionStatement",
                  "src": "383:28:123"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4650,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "421:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4651,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4634,
                      "src": "432:6:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "421:17:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4653,
                  "nodeType": "ExpressionStatement",
                  "src": "421:17:123"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4659,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4634,
                        "src": "468:6:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4830,
                          "src": "448:3:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "448:10:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "448:19:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:27:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "448:27:123"
                }
              ]
            },
            "documentation": null,
            "id": 4663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4634,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4663,
                  "src": "317:11:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4633,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:4:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "316:13:123"
            },
            "returnParameters": {
              "id": 4636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:123"
            },
            "scope": 4664,
            "src": "299:183:123",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4665,
        "src": "25:459:123"
      }
    ],
    "src": "0:484:123"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633178155600155610146806100356000396000f3fe6080604052600436106100345760003560e01c80632e1a7d4d14610039578063b69ef8a814610065578063d0e30db01461008c575b600080fd5b34801561004557600080fd5b506100636004803603602081101561005c57600080fd5b5035610094565b005b34801561007157600080fd5b5061007a6100f4565b60408051918252519081900360200190f35b6100636100fa565b6001548111156100a357600080fd5b6000546001600160a01b031633146100ba57600080fd5b600180548290039055604051339082156108fc029083906000818181858888f193505050501580156100f0573d6000803e3d6000fd5b5050565b60015481565b6000341161010757600080fd5b600180543401905556fea265627a7a72315820c4fac4175d63f7da1984de9e5c3c8705fe274d506f6ab1fb944bf40c09a1e21b64736f6c63430005110032",
  "bytecodeSha1": "b28bd61af4205aa667eeba054e5de3333b0ccd13",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "unOptimizedContract95",
  "coverageMap": {
    "branches": {
      "123": {
        "unOptimizedContract95.deposit": {
          "8": [
            242,
            255,
            true
          ]
        },
        "unOptimizedContract95.withdraw": {
          "6": [
            355,
            372,
            true
          ],
          "7": [
            391,
            410,
            true
          ]
        }
      }
    },
    "statements": {
      "123": {
        "unOptimizedContract95.deposit": {
          "4": [
            234,
            256
          ],
          "5": [
            266,
            286
          ]
        },
        "unOptimizedContract95.withdraw": {
          "0": [
            347,
            373
          ],
          "1": [
            383,
            411
          ],
          "2": [
            421,
            438
          ],
          "3": [
            448,
            475
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100345760003560e01c80632e1a7d4d14610039578063b69ef8a814610065578063d0e30db01461008c575b600080fd5b34801561004557600080fd5b506100636004803603602081101561005c57600080fd5b5035610094565b005b34801561007157600080fd5b5061007a6100f4565b60408051918252519081900360200190f35b6100636100fa565b6001548111156100a357600080fd5b6000546001600160a01b031633146100ba57600080fd5b600180548290039055604051339082156108fc029083906000818181858888f193505050501580156100f0573d6000803e3d6000fd5b5050565b60015481565b6000341161010757600080fd5b600180543401905556fea265627a7a72315820c4fac4175d63f7da1984de9e5c3c8705fe274d506f6ab1fb944bf40c09a1e21b64736f6c63430005110032",
  "deployedSourceMap": "25:459:123:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;299:183:123;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;299:183:123;;:::i;:::-;;81:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:19:123;;;:::i;:::-;;;;;;;;;;;;;;;;190:103;;;:::i;299:183::-;365:7;;355:6;:17;;347:26;;;;;;405:5;;-1:-1:-1;;;;;405:5:123;391:10;:19;383:28;;;;;;421:7;:17;;;;;;;448:27;;:10;;:27;;;;;432:6;;421:7;448:27;421:7;448:27;432:6;448:10;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;448:27:123;299:183;:::o;81:19::-;;;;:::o;190:103::-;254:1;242:9;:13;234:22;;;;;;266:7;:20;;277:9;266:20;;;190:103::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    25,
    484
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x63 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC4 STATICCALL 0xC4 OR 0x5D PUSH4 0xF7DA1984 0xDE SWAP15 0x5C EXTCODECOPY DUP8 SDIV INVALID 0x27 0x4D POP PUSH16 0x6AB1FB944BF40C09A1E21B64736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "MSTORE",
      "path": "123"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "CALLDATASIZE",
      "path": "123"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "LT",
      "path": "123"
    },
    "9": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "13": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "CALLDATALOAD",
      "path": "123"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "SHR",
      "path": "123"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "DUP1",
      "path": "123"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH4",
      "path": "123",
      "value": "0x2E1A7D4D"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "EQ",
      "path": "123"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "DUP1",
      "path": "123"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH4",
      "path": "123",
      "value": "0xB69EF8A8"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "EQ",
      "path": "123"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x65"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "DUP1",
      "path": "123"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH4",
      "path": "123",
      "value": "0xD0E30DB0"
    },
    "47": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "EQ",
      "path": "123"
    },
    "48": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x8C"
    },
    "51": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "52": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "DUP1",
      "path": "123"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        484
      ],
      "op": "REVERT",
      "path": "123"
    },
    "57": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "58": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "CALLVALUE",
      "path": "123"
    },
    "59": {
      "op": "DUP1"
    },
    "60": {
      "op": "ISZERO"
    },
    "61": {
      "op": "PUSH2",
      "value": "0x45"
    },
    "64": {
      "op": "JUMPI"
    },
    "65": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "67": {
      "op": "DUP1"
    },
    "68": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "REVERT",
      "path": "123"
    },
    "69": {
      "op": "JUMPDEST"
    },
    "70": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "POP",
      "path": "123"
    },
    "71": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x63"
    },
    "74": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x4"
    },
    "76": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "DUP1",
      "path": "123"
    },
    "77": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "CALLDATASIZE",
      "path": "123"
    },
    "78": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "SUB",
      "path": "123"
    },
    "79": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "81": {
      "op": "DUP2"
    },
    "82": {
      "op": "LT"
    },
    "83": {
      "op": "ISZERO"
    },
    "84": {
      "op": "PUSH2",
      "value": "0x5C"
    },
    "87": {
      "op": "JUMPI"
    },
    "88": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "90": {
      "op": "DUP1"
    },
    "91": {
      "op": "REVERT"
    },
    "92": {
      "op": "JUMPDEST"
    },
    "93": {
      "op": "POP"
    },
    "94": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "CALLDATALOAD",
      "path": "123"
    },
    "95": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x94"
    },
    "98": {
      "fn": "unOptimizedContract95.withdraw",
      "jump": "i",
      "offset": [
        299,
        482
      ],
      "op": "JUMP",
      "path": "123"
    },
    "99": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "100": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "STOP",
      "path": "123"
    },
    "101": {
      "offset": [
        81,
        100
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "102": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "CALLVALUE",
      "path": "123"
    },
    "103": {
      "op": "DUP1"
    },
    "104": {
      "op": "ISZERO"
    },
    "105": {
      "op": "PUSH2",
      "value": "0x71"
    },
    "108": {
      "op": "JUMPI"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "111": {
      "op": "DUP1"
    },
    "112": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "REVERT",
      "path": "123"
    },
    "113": {
      "op": "JUMPDEST"
    },
    "114": {
      "offset": [
        81,
        100
      ],
      "op": "POP",
      "path": "123"
    },
    "115": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x7A"
    },
    "118": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0xF4"
    },
    "121": {
      "fn": "unOptimizedContract95.withdraw",
      "jump": "i",
      "offset": [
        81,
        100
      ],
      "op": "JUMP",
      "path": "123"
    },
    "122": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "123": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x40"
    },
    "125": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "DUP1",
      "path": "123"
    },
    "126": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "MLOAD",
      "path": "123"
    },
    "127": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SWAP2",
      "path": "123"
    },
    "128": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "DUP3",
      "path": "123"
    },
    "129": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "MSTORE",
      "path": "123"
    },
    "130": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "MLOAD",
      "path": "123"
    },
    "131": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "132": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "DUP2",
      "path": "123"
    },
    "133": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "134": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SUB",
      "path": "123"
    },
    "135": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x20"
    },
    "137": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "ADD",
      "path": "123"
    },
    "138": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "139": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "RETURN",
      "path": "123"
    },
    "140": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        190,
        293
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "141": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        190,
        293
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x63"
    },
    "144": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        190,
        293
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0xFA"
    },
    "147": {
      "fn": "unOptimizedContract95.deposit",
      "jump": "i",
      "offset": [
        190,
        293
      ],
      "op": "JUMP",
      "path": "123"
    },
    "148": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "149": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        365,
        372
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 0,
      "value": "0x1"
    },
    "151": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        365,
        372
      ],
      "op": "SLOAD",
      "path": "123"
    },
    "152": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        355,
        361
      ],
      "op": "DUP2",
      "path": "123"
    },
    "153": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        355,
        372
      ],
      "op": "GT",
      "path": "123"
    },
    "154": {
      "branch": 6,
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        355,
        372
      ],
      "op": "ISZERO",
      "path": "123"
    },
    "155": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0xA3"
    },
    "158": {
      "branch": 6,
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "159": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "161": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "DUP1",
      "path": "123"
    },
    "162": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "REVERT",
      "path": "123"
    },
    "163": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        347,
        373
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "164": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        405,
        410
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 1,
      "value": "0x0"
    },
    "166": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        405,
        410
      ],
      "op": "SLOAD",
      "path": "123"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "173": {
      "op": "SHL"
    },
    "174": {
      "op": "SUB"
    },
    "175": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        405,
        410
      ],
      "op": "AND",
      "path": "123"
    },
    "176": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        391,
        401
      ],
      "op": "CALLER",
      "path": "123"
    },
    "177": {
      "branch": 7,
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        391,
        410
      ],
      "op": "EQ",
      "path": "123"
    },
    "178": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0xBA"
    },
    "181": {
      "branch": 7,
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "182": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "184": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "DUP1",
      "path": "123"
    },
    "185": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "REVERT",
      "path": "123"
    },
    "186": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        383,
        411
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "187": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        428
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 2,
      "value": "0x1"
    },
    "189": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "DUP1",
      "path": "123"
    },
    "190": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "SLOAD",
      "path": "123"
    },
    "191": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "DUP3",
      "path": "123"
    },
    "192": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "193": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "SUB",
      "path": "123"
    },
    "194": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "195": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        438
      ],
      "op": "SSTORE",
      "path": "123"
    },
    "196": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 3,
      "value": "0x40"
    },
    "198": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "MLOAD",
      "path": "123"
    },
    "199": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        458
      ],
      "op": "CALLER",
      "path": "123"
    },
    "200": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        458
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "201": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "DUP3",
      "path": "123"
    },
    "202": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "ISZERO",
      "path": "123"
    },
    "203": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x8FC"
    },
    "206": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "MUL",
      "path": "123"
    },
    "207": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "208": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        432,
        438
      ],
      "op": "DUP4",
      "path": "123"
    },
    "209": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        432,
        438
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "210": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        428
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "212": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "DUP2",
      "path": "123"
    },
    "213": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        421,
        428
      ],
      "op": "DUP2",
      "path": "123"
    },
    "214": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "DUP2",
      "path": "123"
    },
    "215": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        432,
        438
      ],
      "op": "DUP6",
      "path": "123"
    },
    "216": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        458
      ],
      "op": "DUP9",
      "path": "123"
    },
    "217": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "DUP9",
      "path": "123"
    },
    "218": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "CALL",
      "path": "123"
    },
    "219": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "SWAP4",
      "path": "123"
    },
    "220": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "POP",
      "path": "123"
    },
    "221": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "POP",
      "path": "123"
    },
    "222": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "POP",
      "path": "123"
    },
    "223": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "POP",
      "path": "123"
    },
    "224": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "ISZERO",
      "path": "123"
    },
    "225": {
      "op": "DUP1"
    },
    "226": {
      "op": "ISZERO"
    },
    "227": {
      "op": "PUSH2",
      "value": "0xF0"
    },
    "230": {
      "op": "JUMPI"
    },
    "231": {
      "op": "RETURNDATASIZE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "234": {
      "op": "DUP1"
    },
    "235": {
      "op": "RETURNDATACOPY"
    },
    "236": {
      "op": "RETURNDATASIZE"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "239": {
      "op": "REVERT"
    },
    "240": {
      "op": "JUMPDEST"
    },
    "241": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        448,
        475
      ],
      "op": "POP",
      "path": "123"
    },
    "242": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        299,
        482
      ],
      "op": "POP",
      "path": "123"
    },
    "243": {
      "fn": "unOptimizedContract95.withdraw",
      "jump": "o",
      "offset": [
        299,
        482
      ],
      "op": "JUMP",
      "path": "123"
    },
    "244": {
      "offset": [
        81,
        100
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "245": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x1"
    },
    "247": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "SLOAD",
      "path": "123"
    },
    "248": {
      "fn": "unOptimizedContract95.withdraw",
      "offset": [
        81,
        100
      ],
      "op": "DUP2",
      "path": "123"
    },
    "249": {
      "fn": "unOptimizedContract95.withdraw",
      "jump": "o",
      "offset": [
        81,
        100
      ],
      "op": "JUMP",
      "path": "123"
    },
    "250": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        190,
        293
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "251": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        254,
        255
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 4,
      "value": "0x0"
    },
    "253": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        242,
        251
      ],
      "op": "CALLVALUE",
      "path": "123"
    },
    "254": {
      "branch": 8,
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        242,
        255
      ],
      "op": "GT",
      "path": "123"
    },
    "255": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "PUSH2",
      "path": "123",
      "value": "0x107"
    },
    "258": {
      "branch": 8,
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "JUMPI",
      "path": "123"
    },
    "259": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "PUSH1",
      "path": "123",
      "value": "0x0"
    },
    "261": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "DUP1",
      "path": "123"
    },
    "262": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "REVERT",
      "path": "123"
    },
    "263": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        234,
        256
      ],
      "op": "JUMPDEST",
      "path": "123"
    },
    "264": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        273
      ],
      "op": "PUSH1",
      "path": "123",
      "statement": 5,
      "value": "0x1"
    },
    "266": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        286
      ],
      "op": "DUP1",
      "path": "123"
    },
    "267": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        286
      ],
      "op": "SLOAD",
      "path": "123"
    },
    "268": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        277,
        286
      ],
      "op": "CALLVALUE",
      "path": "123"
    },
    "269": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        286
      ],
      "op": "ADD",
      "path": "123"
    },
    "270": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        286
      ],
      "op": "SWAP1",
      "path": "123"
    },
    "271": {
      "fn": "unOptimizedContract95.deposit",
      "offset": [
        266,
        286
      ],
      "op": "SSTORE",
      "path": "123"
    },
    "272": {
      "fn": "unOptimizedContract95.deposit",
      "jump": "o",
      "offset": [
        190,
        293
      ],
      "op": "JUMP",
      "path": "123"
    }
  },
  "sha1": "40261f377fd508707f682ea8e95a8a33eb9102d4",
  "source": "pragma solidity ^0.5.0;\n\ncontract unOptimizedContract95 {\n    address owner;\n    uint public balance;\n\n    constructor() public {\n        owner = msg.sender;\n        balance = 0;\n    }\n\n    function deposit() public payable {\n        require(msg.value > 0);\n        balance += msg.value;\n    }\n\n    function withdraw(uint amount) public {\n        require(amount <= balance);\n        require(msg.sender == owner);\n        balance -= amount;\n        msg.sender.transfer(amount);\n    }\n}",
  "sourceMap": "25:459:123:-;;;107:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;138:5:123;:18;;-1:-1:-1;;;;;;138:18:123;146:10;138:18;;;;166:11;25:459;;;;;;",
  "sourcePath": "contracts/verifiable_contracts_gpt/UnOptimizedContract95.sol",
  "type": "contract"
}