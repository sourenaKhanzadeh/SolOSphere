{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loop24",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/unOptimized_contracts/simple2.sol"
  },
  "ast": {
    "absolutePath": "contracts/unOptimized_contracts/simple2.sol",
    "exportedSymbols": {
      "simple2": [
        50
      ]
    },
    "id": 51,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50
        ],
        "name": "simple2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 13,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "87:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 12,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "87:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "124:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "134:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_18816000_by_1",
                        "typeString": "int_const 18816000"
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_336000_by_1",
                          "typeString": "int_const 336000"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_6000_by_1",
                            "typeString": "int_const 6000"
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "144:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 18,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "149:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "144:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "152:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "144:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6000_by_1",
                            "typeString": "int_const 6000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3536",
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "155:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_56_by_1",
                            "typeString": "int_const 56"
                          },
                          "value": "56"
                        },
                        "src": "144:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_336000_by_1",
                          "typeString": "int_const 336000"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3536",
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "159:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_56_by_1",
                          "typeString": "int_const 56"
                        },
                        "value": "56"
                      },
                      "src": "144:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18816000_by_1",
                        "typeString": "int_const 18816000"
                      }
                    },
                    "src": "134:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "134:27:1"
                }
              ]
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "122:2:1"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "124:0:1"
            },
            "scope": 50,
            "src": "111:57:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "199:87:1",
              "statements": [
                {
                  "body": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "242:38:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "256:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "267:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "256:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "256:13:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "229:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3234",
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "233:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_24_by_1",
                        "typeString": "int_const 24"
                      },
                      "value": "24"
                    },
                    "src": "229:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47,
                  "initializationExpression": {
                    "assignments": [
                      33
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "214:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "214:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 35,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "226:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "214:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "237:3:1",
                      "subExpression": {
                        "id": 39,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "237:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41,
                    "nodeType": "ExpressionStatement",
                    "src": "237:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "209:71:1"
                }
              ]
            },
            "functionSelector": "6dfe9e90",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loop24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:1"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:0:1"
            },
            "scope": 50,
            "src": "174:112:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "64:224:1"
      }
    ],
    "src": "39:250:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5063011f1c00600055610153806100286000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b5780636dfe9e9014610059575b600080fd5b610043610063565b60405161005091906100a2565b60405180910390f35b610061610069565b005b60005481565b60005b601881101561009f57600a60008082825461008791906100ab565b90915550819050610097816100ec565b91505061006c565b50565b90815260200190565b600080821280156001600160ff1b03849003851316156100cd576100cd610107565b600160ff1b83900384128116156100e6576100e6610107565b50500190565b600060001982141561010057610100610107565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122063d780aa8bab37a335548d4107bc21b281303de827415b4d75df4b55cf61648364736f6c63430008000033",
  "bytecodeSha1": "48d48a11608255af01c8fa72110292e44899afcf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "simple2",
  "coverageMap": {
    "branches": {
      "1": {}
    },
    "statements": {
      "1": {
        "simple2.loop24": {
          "0": [
            256,
            269
          ],
          "1": [
            237,
            240
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b5780636dfe9e9014610059575b600080fd5b610043610063565b60405161005091906100a2565b60405180910390f35b610061610069565b005b60005481565b60005b601881101561009f57600a60008082825461008791906100ab565b90915550819050610097816100ec565b91505061006c565b50565b90815260200190565b600080821280156001600160ff1b03849003851316156100cd576100cd610107565b600160ff1b83900384128116156100e6576100e6610107565b50500190565b600060001982141561010057610100610107565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122063d780aa8bab37a335548d4107bc21b281303de827415b4d75df4b55cf61648364736f6c63430008000033",
  "deployedSourceMap": "64:224:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:112;;;:::i;:::-;;87:18;;;;:::o;174:112::-;214:9;209:71;233:2;229:1;:6;209:71;;;267:2;256:7;;:13;;;;;;;:::i;:::-;;;;-1:-1:-1;237:3:1;;-1:-1:-1;237:3:1;;;:::i;:::-;;;;209:71;;;;174:112::o;14:175:2:-;158:25;;;146:2;131:18;;113:76::o;194:267::-;;261:11;;;288:10;;-1:-1:-1;;;;;307:27:2;;;300:35;;284:52;281:2;;;339:18;;:::i;:::-;-1:-1:-1;;;386:19:2;;;379:27;;371:36;;368:2;;;410:18;;:::i;:::-;-1:-1:-1;;446:9:2;;241:220::o;466:135::-;;-1:-1:-1;;526:17:2;;523:2;;;546:18;;:::i;:::-;-1:-1:-1;593:1:2;582:13;;513:88::o;606:127::-;667:10;662:3;658:20;655:1;648:31;698:4;695:1;688:15;722:4;719:1;712:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    64,
    288
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x6DFE9E90 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x18 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0xA PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x97 DUP2 PUSH2 0xEC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0xCD JUMPI PUSH2 0xCD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0xE6 JUMPI PUSH2 0xE6 PUSH2 0x107 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x107 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xD780AA8B 0xAB CALLDATACOPY LOG3 CALLDATALOAD SLOAD DUP14 COINBASE SMOD 0xBC 0x21 0xB2 DUP2 ADDRESS RETURNDATASIZE 0xE8 0x27 COINBASE JUMPDEST 0x4D PUSH22 0xDF4B55CF61648364736F6C6343000800003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x61BC221A"
    },
    "38": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6DFE9E90"
    },
    "49": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59"
    },
    "53": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        64,
        288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "59": {
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "60": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43"
    },
    "63": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63"
    },
    "66": {
      "fn": null,
      "jump": "i",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "1"
    },
    "67": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "68": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "70": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "71": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50"
    },
    "74": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "79": {
      "fn": null,
      "jump": "i",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "1"
    },
    "80": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "83": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "84": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "DUP1",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SUB",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "RETURN",
      "path": "1"
    },
    "89": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "90": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61"
    },
    "93": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69"
    },
    "96": {
      "fn": "simple2.loop24",
      "jump": "i",
      "offset": [
        174,
        286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "97": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "98": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "STOP",
      "path": "1"
    },
    "99": {
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "100": {
      "fn": "simple2.loop24",
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "102": {
      "fn": "simple2.loop24",
      "offset": [
        87,
        105
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "103": {
      "fn": "simple2.loop24",
      "offset": [
        87,
        105
      ],
      "op": "DUP2",
      "path": "1"
    },
    "104": {
      "fn": "simple2.loop24",
      "jump": "o",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "1"
    },
    "105": {
      "fn": "simple2.loop24",
      "offset": [
        174,
        286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "106": {
      "fn": "simple2.loop24",
      "offset": [
        214,
        223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "108": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "109": {
      "fn": "simple2.loop24",
      "offset": [
        233,
        235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x18"
    },
    "111": {
      "fn": "simple2.loop24",
      "offset": [
        229,
        230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "112": {
      "fn": "simple2.loop24",
      "offset": [
        229,
        235
      ],
      "op": "LT",
      "path": "1"
    },
    "113": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "114": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F"
    },
    "117": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "118": {
      "fn": "simple2.loop24",
      "offset": [
        267,
        269
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0xA"
    },
    "120": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        263
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "122": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        263
      ],
      "op": "DUP1",
      "path": "1"
    },
    "123": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "124": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "125": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "126": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87"
    },
    "129": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "130": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "131": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "134": {
      "fn": "simple2.loop24",
      "jump": "i",
      "offset": [
        256,
        269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "135": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "136": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "137": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "138": {
      "fn": "simple2.loop24",
      "offset": [
        256,
        269
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 1
    },
    "141": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "142": {
      "op": "POP"
    },
    "143": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "146": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "147": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEC"
    },
    "150": {
      "fn": "simple2.loop24",
      "jump": "i",
      "offset": [
        237,
        240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "151": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "153": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "POP",
      "path": "1"
    },
    "154": {
      "fn": "simple2.loop24",
      "offset": [
        237,
        240
      ],
      "op": "POP",
      "path": "1"
    },
    "155": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C"
    },
    "158": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "JUMP",
      "path": "1"
    },
    "159": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "160": {
      "fn": "simple2.loop24",
      "offset": [
        209,
        280
      ],
      "op": "POP",
      "path": "1"
    },
    "161": {
      "fn": "simple2.loop24",
      "jump": "o",
      "offset": [
        174,
        286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "162": {
      "op": "JUMPDEST"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "op": "SWAP1"
    },
    "170": {
      "jump": "o",
      "op": "JUMP"
    },
    "171": {
      "op": "JUMPDEST"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "174": {
      "op": "DUP1"
    },
    "175": {
      "op": "DUP3"
    },
    "176": {
      "op": "SLT"
    },
    "177": {
      "op": "DUP1"
    },
    "178": {
      "op": "ISZERO"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "op": "SUB"
    },
    "187": {
      "op": "DUP5"
    },
    "188": {
      "op": "SWAP1"
    },
    "189": {
      "op": "SUB"
    },
    "190": {
      "op": "DUP6"
    },
    "191": {
      "op": "SGT"
    },
    "192": {
      "op": "AND"
    },
    "193": {
      "op": "ISZERO"
    },
    "194": {
      "op": "PUSH2",
      "value": "0xCD"
    },
    "197": {
      "op": "JUMPI"
    },
    "198": {
      "op": "PUSH2",
      "value": "0xCD"
    },
    "201": {
      "op": "PUSH2",
      "value": "0x107"
    },
    "204": {
      "jump": "i",
      "op": "JUMP"
    },
    "205": {
      "op": "JUMPDEST"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "op": "DUP4"
    },
    "212": {
      "op": "SWAP1"
    },
    "213": {
      "op": "SUB"
    },
    "214": {
      "op": "DUP5"
    },
    "215": {
      "op": "SLT"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "AND"
    },
    "218": {
      "op": "ISZERO"
    },
    "219": {
      "op": "PUSH2",
      "value": "0xE6"
    },
    "222": {
      "op": "JUMPI"
    },
    "223": {
      "op": "PUSH2",
      "value": "0xE6"
    },
    "226": {
      "op": "PUSH2",
      "value": "0x107"
    },
    "229": {
      "jump": "i",
      "op": "JUMP"
    },
    "230": {
      "op": "JUMPDEST"
    },
    "231": {
      "op": "POP"
    },
    "232": {
      "op": "POP"
    },
    "233": {
      "op": "ADD"
    },
    "234": {
      "op": "SWAP1"
    },
    "235": {
      "jump": "o",
      "op": "JUMP"
    },
    "236": {
      "op": "JUMPDEST"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "241": {
      "op": "NOT"
    },
    "242": {
      "op": "DUP3"
    },
    "243": {
      "op": "EQ"
    },
    "244": {
      "op": "ISZERO"
    },
    "245": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "248": {
      "op": "JUMPI"
    },
    "249": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "252": {
      "op": "PUSH2",
      "value": "0x107"
    },
    "255": {
      "jump": "i",
      "op": "JUMP"
    },
    "256": {
      "op": "JUMPDEST"
    },
    "257": {
      "op": "POP"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "op": "SWAP1"
    },
    "262": {
      "jump": "o",
      "op": "JUMP"
    },
    "263": {
      "op": "JUMPDEST"
    },
    "264": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "269": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "271": {
      "op": "SHL"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "279": {
      "op": "MSTORE"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "284": {
      "op": "REVERT"
    }
  },
  "sha1": "134212382c6ca33d2c74ceea7f6e476b3feb3312",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract simple2 {\n    int public counter;\n    constructor(){\n        counter = 10 * 20*30*56 *56;\n    }\n\n    function loop24() public {\n        for (uint256 i = 0; i < 24; i++) {\n            counter += 10;\n        }\n    }\n}\n",
  "sourceMap": "64:224:1:-:0;;;111:57;;;;;;;;;-1:-1:-1;144:17:1;134:7;:27;64:224;;;;;;",
  "sourcePath": "contracts/unOptimized_contracts/simple2.sol",
  "type": "contract"
}