{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "bar",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foo",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fooBar",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "res",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/unOptimized_contracts/A.sol"
  },
  "ast": {
    "absolutePath": "contracts/unOptimized_contracts/A.sol",
    "exportedSymbols": {
      "A": [
        58
      ]
    },
    "id": 59,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 58,
        "linearizedBaseContracts": [
          58
        ],
        "name": "A",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6f10e285",
            "id": 3,
            "mutability": "mutable",
            "name": "res",
            "nodeType": "VariableDeclaration",
            "scope": 58,
            "src": "81:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 2,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "81:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "115:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "149:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3233",
                      "id": 7,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "155:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_23_by_1",
                        "typeString": "int_const 23"
                      },
                      "value": "23"
                    },
                    "src": "149:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 9,
                  "nodeType": "ExpressionStatement",
                  "src": "149:8:0"
                }
              ]
            },
            "id": 11,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "113:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "115:0:0"
            },
            "scope": 58,
            "src": "102:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "209:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3130",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "226:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 15,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "219:9:0"
                }
              ]
            },
            "functionSelector": "c2985578",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "foo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "205:3:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "204:5:0"
            },
            "scope": 58,
            "src": "170:65:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "280:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3230",
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "297:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "functionReturnParameters": 23,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "290:9:0"
                }
              ]
            },
            "functionSelector": "febb0f7e",
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bar",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "276:3:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:5:0"
            },
            "scope": 58,
            "src": "241:65:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "349:124:0",
              "statements": [
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "384:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "398:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43,
                              "name": "foo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "405:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_int256_$",
                                "typeString": "function () pure returns (int256)"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "405:5:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "398:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 46,
                        "nodeType": "ExpressionStatement",
                        "src": "398:12:0"
                      },
                      {
                        "expression": {
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "424:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 48,
                              "name": "bar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "431:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_int256_$",
                                "typeString": "function () pure returns (int256)"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "431:5:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "424:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 51,
                        "nodeType": "ExpressionStatement",
                        "src": "424:12:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "373:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "375:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "373:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53,
                  "initializationExpression": {
                    "assignments": [
                      33
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "363:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 35,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "370:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "363:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "380:3:0",
                      "subExpression": {
                        "id": 39,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "380:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41,
                    "nodeType": "ExpressionStatement",
                    "src": "380:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "359:88:0"
                },
                {
                  "expression": {
                    "id": 54,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "463:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 31,
                  "id": 55,
                  "nodeType": "Return",
                  "src": "456:10:0"
                }
              ]
            },
            "functionSelector": "90c0414d",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fooBar",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "345:3:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "344:5:0"
            },
            "scope": 58,
            "src": "312:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 59,
        "src": "64:411:0"
      }
    ],
    "src": "39:437:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060176000556101ab806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636f10e2851461005157806390c0414d1461006f578063c298557814610077578063febb0f7e1461007f575b600080fd5b610059610087565b60405161006691906100fa565b60405180910390f35b61005961008d565b6100596100f0565b6100596100f5565b60005481565b6000805b60648110156100e8576100a26100f0565b6000808282546100b29190610103565b909155506100c090506100f5565b6000808282546100d09190610103565b909155508190506100e081610144565b915050610091565b505060005490565b600a90565b601490565b90815260200190565b600080821280156001600160ff1b03849003851316156101255761012561015f565b600160ff1b839003841281161561013e5761013e61015f565b50500190565b60006000198214156101585761015861015f565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e57dc16dc00fd0b496b82cabe99d9feae7451b64f6ed2983b7a2b0d5b1e4aab764736f6c63430008000033",
  "bytecodeSha1": "0747e49751c4a6e746dbafa9d711ef2ae8fbb907",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "A",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "A.bar": {
          "5": [
            290,
            299
          ]
        },
        "A.foo": {
          "4": [
            219,
            228
          ]
        },
        "A.fooBar": {
          "0": [
            398,
            410
          ],
          "1": [
            424,
            436
          ],
          "2": [
            380,
            383
          ],
          "3": [
            456,
            466
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80636f10e2851461005157806390c0414d1461006f578063c298557814610077578063febb0f7e1461007f575b600080fd5b610059610087565b60405161006691906100fa565b60405180910390f35b61005961008d565b6100596100f0565b6100596100f5565b60005481565b6000805b60648110156100e8576100a26100f0565b6000808282546100b29190610103565b909155506100c090506100f5565b6000808282546100d09190610103565b909155508190506100e081610144565b915050610091565b505060005490565b600a90565b601490565b90815260200190565b600080821280156001600160ff1b03849003851316156101255761012561015f565b600160ff1b839003841281161561013e5761013e61015f565b50500190565b60006000198214156101585761015861015f565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e57dc16dc00fd0b496b82cabe99d9feae7451b64f6ed2983b7a2b0d5b1e4aab764736f6c63430008000033",
  "deployedSourceMap": "64:411:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:161;;;:::i;170:65::-;;;:::i;241:::-;;;:::i;81:14::-;;;;:::o;312:161::-;345:3;;359:88;375:3;373:1;:5;359:88;;;405:5;:3;:5::i;:::-;398:3;;:12;;;;;;;:::i;:::-;;;;-1:-1:-1;431:5:0;;-1:-1:-1;431:3:0;:5::i;:::-;424:3;;:12;;;;;;;:::i;:::-;;;;-1:-1:-1;380:3:0;;-1:-1:-1;380:3:0;;;:::i;:::-;;;;359:88;;;-1:-1:-1;;463:3:0;;312:161;:::o;170:65::-;226:2;170:65;:::o;241:::-;297:2;241:65;:::o;14:175:1:-;158:25;;;146:2;131:18;;113:76::o;194:267::-;;261:11;;;288:10;;-1:-1:-1;;;;;307:27:1;;;300:35;;284:52;281:2;;;339:18;;:::i;:::-;-1:-1:-1;;;386:19:1;;;379:27;;371:36;;368:2;;;410:18;;:::i;:::-;-1:-1:-1;;446:9:1;;241:220::o;466:135::-;;-1:-1:-1;;526:17:1;;523:2;;;546:18;;:::i;:::-;-1:-1:-1;593:1:1;582:13;;513:88::o;606:127::-;667:10;662:3;658:20;655:1;648:31;698:4;695:1;688:15;722:4;719:1;712:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    64,
    475
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F10E285 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x90C0414D EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0x7F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x8D JUMP JUMPDEST PUSH2 0x59 PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x59 PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0xE8 JUMPI PUSH2 0xA2 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xC0 SWAP1 POP PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0x144 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 JUMP JUMPDEST PUSH1 0x14 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x125 JUMPI PUSH2 0x125 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x13E JUMPI PUSH2 0x13E PUSH2 0x15F JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x158 JUMPI PUSH2 0x158 PUSH2 0x15F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH30 0xC16DC00FD0B496B82CABE99D9FEAE7451B64F6ED2983B7A2B0D5B1E4AAB7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F10E285"
    },
    "38": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90C0414D"
    },
    "49": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "53": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC2985578"
    },
    "60": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77"
    },
    "64": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFEBB0F7E"
    },
    "71": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "75": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        64,
        475
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "offset": [
        81,
        95
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "85": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "88": {
      "fn": null,
      "jump": "i",
      "offset": [
        81,
        95
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "92": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "96": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "101": {
      "fn": null,
      "jump": "i",
      "offset": [
        81,
        95
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "105": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "106": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "DUP1",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "SUB",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        81,
        95
      ],
      "op": "RETURN",
      "path": "0"
    },
    "111": {
      "fn": "A.fooBar",
      "offset": [
        312,
        473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "A.fooBar",
      "offset": [
        312,
        473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "115": {
      "fn": "A.fooBar",
      "offset": [
        312,
        473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "118": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        312,
        473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "119": {
      "fn": "A.foo",
      "offset": [
        170,
        235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "120": {
      "fn": "A.foo",
      "offset": [
        170,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "123": {
      "fn": "A.foo",
      "offset": [
        170,
        235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "126": {
      "fn": "A.foo",
      "jump": "i",
      "offset": [
        170,
        235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "127": {
      "fn": "A.bar",
      "offset": [
        241,
        306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": "A.bar",
      "offset": [
        241,
        306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "131": {
      "fn": "A.bar",
      "offset": [
        241,
        306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "134": {
      "fn": "A.bar",
      "jump": "i",
      "offset": [
        241,
        306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "135": {
      "offset": [
        81,
        95
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "136": {
      "fn": "A.bar",
      "offset": [
        81,
        95
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": "A.bar",
      "offset": [
        81,
        95
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "139": {
      "fn": "A.bar",
      "offset": [
        81,
        95
      ],
      "op": "DUP2",
      "path": "0"
    },
    "140": {
      "fn": "A.bar",
      "jump": "o",
      "offset": [
        81,
        95
      ],
      "op": "JUMP",
      "path": "0"
    },
    "141": {
      "fn": "A.fooBar",
      "offset": [
        312,
        473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "A.fooBar",
      "offset": [
        345,
        348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "144": {
      "fn": "A.fooBar",
      "offset": [
        345,
        348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "145": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": "A.fooBar",
      "offset": [
        375,
        378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "148": {
      "fn": "A.fooBar",
      "offset": [
        373,
        374
      ],
      "op": "DUP2",
      "path": "0"
    },
    "149": {
      "fn": "A.fooBar",
      "offset": [
        373,
        378
      ],
      "op": "LT",
      "path": "0"
    },
    "150": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "151": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "154": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "155": {
      "fn": "A.fooBar",
      "offset": [
        405,
        410
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0xA2"
    },
    "158": {
      "fn": "A.fooBar",
      "offset": [
        405,
        408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "161": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        405,
        410
      ],
      "op": "JUMP",
      "path": "0"
    },
    "162": {
      "fn": "A.fooBar",
      "offset": [
        405,
        410
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "A.fooBar",
      "offset": [
        398,
        401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "165": {
      "fn": "A.fooBar",
      "offset": [
        398,
        401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "166": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "DUP3",
      "path": "0"
    },
    "167": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "DUP3",
      "path": "0"
    },
    "168": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "169": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2"
    },
    "172": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "173": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "174": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "177": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        398,
        410
      ],
      "op": "JUMP",
      "path": "0"
    },
    "178": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "180": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "181": {
      "fn": "A.fooBar",
      "offset": [
        398,
        410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "182": {
      "op": "POP"
    },
    "183": {
      "fn": "A.fooBar",
      "offset": [
        431,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0xC0"
    },
    "186": {
      "fn": "A.fooBar",
      "offset": [
        431,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "187": {
      "op": "POP"
    },
    "188": {
      "fn": "A.fooBar",
      "offset": [
        431,
        434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "191": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        431,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "A.fooBar",
      "offset": [
        431,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "A.fooBar",
      "offset": [
        424,
        427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "195": {
      "fn": "A.fooBar",
      "offset": [
        424,
        427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "197": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "198": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "199": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "202": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "203": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "204": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "207": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        424,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "210": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "A.fooBar",
      "offset": [
        424,
        436
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 2
    },
    "214": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "215": {
      "op": "POP"
    },
    "216": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0"
    },
    "219": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "220": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "223": {
      "fn": "A.fooBar",
      "jump": "i",
      "offset": [
        380,
        383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "224": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "225": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "226": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "POP",
      "path": "0"
    },
    "227": {
      "fn": "A.fooBar",
      "offset": [
        380,
        383
      ],
      "op": "POP",
      "path": "0"
    },
    "228": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "231": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "232": {
      "fn": "A.fooBar",
      "offset": [
        359,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "op": "POP"
    },
    "234": {
      "op": "POP"
    },
    "235": {
      "fn": "A.fooBar",
      "offset": [
        463,
        466
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "237": {
      "fn": "A.fooBar",
      "offset": [
        463,
        466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "238": {
      "fn": "A.fooBar",
      "offset": [
        312,
        473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "239": {
      "fn": "A.fooBar",
      "jump": "o",
      "offset": [
        312,
        473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "fn": "A.foo",
      "offset": [
        170,
        235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "A.foo",
      "offset": [
        226,
        228
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0xA"
    },
    "243": {
      "fn": "A.foo",
      "offset": [
        170,
        235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "fn": "A.foo",
      "jump": "o",
      "offset": [
        170,
        235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "A.bar",
      "offset": [
        241,
        306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "A.bar",
      "offset": [
        297,
        299
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x14"
    },
    "248": {
      "fn": "A.bar",
      "offset": [
        241,
        306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "249": {
      "fn": "A.bar",
      "jump": "o",
      "offset": [
        241,
        306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "250": {
      "op": "JUMPDEST"
    },
    "251": {
      "op": "SWAP1"
    },
    "252": {
      "op": "DUP2"
    },
    "253": {
      "op": "MSTORE"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "op": "SWAP1"
    },
    "258": {
      "jump": "o",
      "op": "JUMP"
    },
    "259": {
      "op": "JUMPDEST"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "262": {
      "op": "DUP1"
    },
    "263": {
      "op": "DUP3"
    },
    "264": {
      "op": "SLT"
    },
    "265": {
      "op": "DUP1"
    },
    "266": {
      "op": "ISZERO"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "op": "DUP5"
    },
    "276": {
      "op": "SWAP1"
    },
    "277": {
      "op": "SUB"
    },
    "278": {
      "op": "DUP6"
    },
    "279": {
      "op": "SGT"
    },
    "280": {
      "op": "AND"
    },
    "281": {
      "op": "ISZERO"
    },
    "282": {
      "op": "PUSH2",
      "value": "0x125"
    },
    "285": {
      "op": "JUMPI"
    },
    "286": {
      "op": "PUSH2",
      "value": "0x125"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x15F"
    },
    "292": {
      "jump": "i",
      "op": "JUMP"
    },
    "293": {
      "op": "JUMPDEST"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "298": {
      "op": "SHL"
    },
    "299": {
      "op": "DUP4"
    },
    "300": {
      "op": "SWAP1"
    },
    "301": {
      "op": "SUB"
    },
    "302": {
      "op": "DUP5"
    },
    "303": {
      "op": "SLT"
    },
    "304": {
      "op": "DUP2"
    },
    "305": {
      "op": "AND"
    },
    "306": {
      "op": "ISZERO"
    },
    "307": {
      "op": "PUSH2",
      "value": "0x13E"
    },
    "310": {
      "op": "JUMPI"
    },
    "311": {
      "op": "PUSH2",
      "value": "0x13E"
    },
    "314": {
      "op": "PUSH2",
      "value": "0x15F"
    },
    "317": {
      "jump": "i",
      "op": "JUMP"
    },
    "318": {
      "op": "JUMPDEST"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "op": "SWAP1"
    },
    "323": {
      "jump": "o",
      "op": "JUMP"
    },
    "324": {
      "op": "JUMPDEST"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "329": {
      "op": "NOT"
    },
    "330": {
      "op": "DUP3"
    },
    "331": {
      "op": "EQ"
    },
    "332": {
      "op": "ISZERO"
    },
    "333": {
      "op": "PUSH2",
      "value": "0x158"
    },
    "336": {
      "op": "JUMPI"
    },
    "337": {
      "op": "PUSH2",
      "value": "0x158"
    },
    "340": {
      "op": "PUSH2",
      "value": "0x15F"
    },
    "343": {
      "jump": "i",
      "op": "JUMP"
    },
    "344": {
      "op": "JUMPDEST"
    },
    "345": {
      "op": "POP"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "op": "SWAP1"
    },
    "350": {
      "jump": "o",
      "op": "JUMP"
    },
    "351": {
      "op": "JUMPDEST"
    },
    "352": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "367": {
      "op": "MSTORE"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "372": {
      "op": "REVERT"
    }
  },
  "sha1": "784f84f3c1587b180f3adcbc08d59223086e85b6",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract A {\n    int public res;\n\n    constructor(){\n        // do something\n        res = 23;\n    }\n\n    function foo() public pure returns(int){\n        return 10;\n    }\n\n    function bar() public pure returns(int){\n        return 20;\n    }\n\n    function fooBar() public returns(int){\n        for(uint i=0; i<100; i++){\n            res += foo();\n            res += bar();\n        }\n        return res;\n    }\n}\n",
  "sourceMap": "64:411:0:-:0;;;102:62;;;;;;;;;-1:-1:-1;155:2:0;149:3;:8;64:411;;;;;;",
  "sourcePath": "contracts/unOptimized_contracts/A.sol",
  "type": "contract"
}