{
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "executeLoop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "setLoopCount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "67": "contracts/verifiable_contracts_gpt/Loops89.sol"
  },
  "ast": {
    "absolutePath": "contracts/verifiable_contracts_gpt/Loops89.sol",
    "exportedSymbols": {
      "loops89": [
        2504
      ]
    },
    "id": 2505,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2475,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2504,
        "linearizedBaseContracts": [
          2504
        ],
        "name": "loops89",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2477,
            "name": "loopCount",
            "nodeType": "VariableDeclaration",
            "scope": 2504,
            "src": "97:14:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2476,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "97:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2486,
              "nodeType": "Block",
              "src": "206:34:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2482,
                      "name": "loopCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "216:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2483,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "228:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "216:17:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2485,
                  "nodeType": "ExpressionStatement",
                  "src": "216:17:67"
                }
              ]
            },
            "documentation": null,
            "id": 2487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLoopCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2479,
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 2487,
                  "src": "187:10:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2478,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "186:12:67"
            },
            "returnParameters": {
              "id": 2481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:0:67"
            },
            "scope": 2504,
            "src": "165:75:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "321:92:67",
              "statements": [
                {
                  "body": {
                    "id": 2500,
                    "nodeType": "Block",
                    "src": "368:39:67",
                    "statements": []
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2494,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "348:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2495,
                      "name": "loopCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "352:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "348:13:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2501,
                  "initializationExpression": {
                    "assignments": [
                      2491
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2491,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2501,
                        "src": "336:6:67",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "336:4:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2493,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "345:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "336:10:67"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "363:3:67",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2497,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "363:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2499,
                    "nodeType": "ExpressionStatement",
                    "src": "363:3:67"
                  },
                  "nodeType": "ForStatement",
                  "src": "331:76:67"
                }
              ]
            },
            "documentation": null,
            "id": 2503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeLoop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:2:67"
            },
            "returnParameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:67"
            },
            "scope": 2504,
            "src": "291:122:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2505,
        "src": "25:390:67"
      }
    ],
    "src": "0:415:67"
  },
  "bytecode": "608060405234801561001057600080fd5b5060a98061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630601e485146037578063438aa294146053575b600080fd5b605160048036036020811015604b57600080fd5b50356059565b005b6051605e565b600055565b60005b6000548110156071576001016061565b5056fea265627a7a72315820f2d86454e5d9c5db90be60401cc6e8ce5c9418867b702297d47649b7955e89ff64736f6c63430005110032",
  "bytecodeSha1": "0b81c9be2e03fe5e369da305ec26b4865d1303fb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "loops89",
  "coverageMap": {
    "branches": {
      "67": {}
    },
    "statements": {
      "67": {
        "loops89.executeLoop": {
          "1": [
            363,
            366
          ]
        },
        "loops89.setLoopCount": {
          "0": [
            216,
            233
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630601e485146037578063438aa294146053575b600080fd5b605160048036036020811015604b57600080fd5b50356059565b005b6051605e565b600055565b60005b6000548110156071576001016061565b5056fea265627a7a72315820f2d86454e5d9c5db90be60401cc6e8ce5c9418867b702297d47649b7955e89ff64736f6c63430005110032",
  "deployedSourceMap": "25:390:67:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:390:67;;;;;;;;;;;;;;;;;;;;;;;;165:75;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;165:75:67;;:::i;:::-;;291:122;;;:::i;165:75::-;216:9;:17;165:75::o;291:122::-;336:6;331:76;352:9;;348:1;:13;331:76;;;363:3;;331:76;;;;291:122::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    25,
    415
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x601E485 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x438AA294 EQ PUSH1 0x53 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x51 PUSH1 0x5E JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH1 0x71 JUMPI PUSH1 0x1 ADD PUSH1 0x61 JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLCODE 0xD8 PUSH5 0x54E5D9C5DB SWAP1 0xBE PUSH1 0x40 SHR 0xC6 0xE8 0xCE 0x5C SWAP5 XOR DUP7 PUSH28 0x702297D47649B7955E89FF64736F6C63430005110032000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "MSTORE",
      "path": "67"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "CALLVALUE",
      "path": "67"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "10": {
      "op": "JUMPI"
    },
    "11": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13": {
      "op": "DUP1"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "REVERT",
      "path": "67"
    },
    "15": {
      "op": "JUMPDEST"
    },
    "16": {
      "offset": [
        25,
        415
      ],
      "op": "POP",
      "path": "67"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "CALLDATASIZE",
      "path": "67"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "LT",
      "path": "67"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "JUMPI",
      "path": "67"
    },
    "24": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "CALLDATALOAD",
      "path": "67"
    },
    "27": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "SHR",
      "path": "67"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "DUP1",
      "path": "67"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH4",
      "path": "67",
      "value": "0x601E485"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "EQ",
      "path": "67"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "JUMPI",
      "path": "67"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "DUP1",
      "path": "67"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH4",
      "path": "67",
      "value": "0x438AA294"
    },
    "46": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "EQ",
      "path": "67"
    },
    "47": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x53"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "JUMPI",
      "path": "67"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "51": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "DUP1",
      "path": "67"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        415
      ],
      "op": "REVERT",
      "path": "67"
    },
    "55": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "56": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x51"
    },
    "58": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x4"
    },
    "60": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "DUP1",
      "path": "67"
    },
    "61": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "CALLDATASIZE",
      "path": "67"
    },
    "62": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "SUB",
      "path": "67"
    },
    "63": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "65": {
      "op": "DUP2"
    },
    "66": {
      "op": "LT"
    },
    "67": {
      "op": "ISZERO"
    },
    "68": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "70": {
      "op": "JUMPI"
    },
    "71": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "73": {
      "op": "DUP1"
    },
    "74": {
      "op": "REVERT"
    },
    "75": {
      "op": "JUMPDEST"
    },
    "76": {
      "op": "POP"
    },
    "77": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "CALLDATALOAD",
      "path": "67"
    },
    "78": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x59"
    },
    "80": {
      "fn": "loops89.setLoopCount",
      "jump": "i",
      "offset": [
        165,
        240
      ],
      "op": "JUMP",
      "path": "67"
    },
    "81": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "82": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "STOP",
      "path": "67"
    },
    "83": {
      "fn": "loops89.executeLoop",
      "offset": [
        291,
        413
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "84": {
      "fn": "loops89.executeLoop",
      "offset": [
        291,
        413
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x51"
    },
    "86": {
      "fn": "loops89.executeLoop",
      "offset": [
        291,
        413
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x5E"
    },
    "88": {
      "fn": "loops89.executeLoop",
      "jump": "i",
      "offset": [
        291,
        413
      ],
      "op": "JUMP",
      "path": "67"
    },
    "89": {
      "fn": "loops89.setLoopCount",
      "offset": [
        165,
        240
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "90": {
      "fn": "loops89.setLoopCount",
      "offset": [
        216,
        225
      ],
      "op": "PUSH1",
      "path": "67",
      "statement": 0,
      "value": "0x0"
    },
    "92": {
      "fn": "loops89.setLoopCount",
      "offset": [
        216,
        233
      ],
      "op": "SSTORE",
      "path": "67"
    },
    "93": {
      "fn": "loops89.setLoopCount",
      "jump": "o",
      "offset": [
        165,
        240
      ],
      "op": "JUMP",
      "path": "67"
    },
    "94": {
      "fn": "loops89.executeLoop",
      "offset": [
        291,
        413
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "95": {
      "fn": "loops89.executeLoop",
      "offset": [
        336,
        342
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x0"
    },
    "97": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "98": {
      "fn": "loops89.executeLoop",
      "offset": [
        352,
        361
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x0"
    },
    "100": {
      "fn": "loops89.executeLoop",
      "offset": [
        352,
        361
      ],
      "op": "SLOAD",
      "path": "67"
    },
    "101": {
      "fn": "loops89.executeLoop",
      "offset": [
        348,
        349
      ],
      "op": "DUP2",
      "path": "67"
    },
    "102": {
      "fn": "loops89.executeLoop",
      "offset": [
        348,
        361
      ],
      "op": "LT",
      "path": "67"
    },
    "103": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "ISZERO",
      "path": "67"
    },
    "104": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x71"
    },
    "106": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "JUMPI",
      "path": "67"
    },
    "107": {
      "fn": "loops89.executeLoop",
      "offset": [
        363,
        366
      ],
      "op": "PUSH1",
      "path": "67",
      "statement": 1,
      "value": "0x1"
    },
    "109": {
      "fn": "loops89.executeLoop",
      "offset": [
        363,
        366
      ],
      "op": "ADD",
      "path": "67"
    },
    "110": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "PUSH1",
      "path": "67",
      "value": "0x61"
    },
    "112": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "JUMP",
      "path": "67"
    },
    "113": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "JUMPDEST",
      "path": "67"
    },
    "114": {
      "fn": "loops89.executeLoop",
      "offset": [
        331,
        407
      ],
      "op": "POP",
      "path": "67"
    },
    "115": {
      "fn": "loops89.executeLoop",
      "jump": "o",
      "offset": [
        291,
        413
      ],
      "op": "JUMP",
      "path": "67"
    }
  },
  "sha1": "73c2cac591f5e32a218d514ed3a6bed4ba61288a",
  "source": "pragma solidity ^0.5.0;\n\ncontract loops89 {\n    // define a variable to store the loop count\n    uint loopCount;\n\n    // define a function to set the loop count\n    function setLoopCount(uint count) public {\n        loopCount = count;\n    }\n\n    // define a function to execute the loop\n    function executeLoop() public {\n        for (uint i = 0; i < loopCount; i++) {\n            // do some work\n        }\n    }\n}",
  "sourceMap": "25:390:67:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:390:67;;;;;;;",
  "sourcePath": "contracts/verifiable_contracts_gpt/Loops89.sol",
  "type": "contract"
}