{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loop24",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/optimized_contracts/Opt_simple2.sol"
  },
  "ast": {
    "absolutePath": "contracts/optimized_contracts/Opt_simple2.sol",
    "exportedSymbols": {
      "Opt_simple2": [
        111
      ]
    },
    "id": 112,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 75,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 111,
        "linearizedBaseContracts": [
          111
        ],
        "name": "Opt_simple2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 78,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 111,
            "src": "51:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 76,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "51:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "3138383136303030",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "72:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18816000_by_1",
                "typeString": "int_const 18816000"
              },
              "value": "18816000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "98:12:2",
              "statements": []
            },
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "94:2:2"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "98:0:2"
            },
            "scope": 111,
            "src": "83:27:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "137:139:2",
              "statements": [
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "counter_",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "147:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "147:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "id": 87,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "163:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "147:23:2"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "214:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99,
                            "name": "counter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "228:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "240:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "228:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "228:14:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 93,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "201:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3234",
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "205:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_24_by_1",
                        "typeString": "int_const 24"
                      },
                      "value": "24"
                    },
                    "src": "201:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 104,
                  "initializationExpression": {
                    "assignments": [
                      90
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "185:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 92,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "198:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "185:14:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "209:3:2",
                      "subExpression": {
                        "id": 96,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "209:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 98,
                    "nodeType": "ExpressionStatement",
                    "src": "209:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "180:73:2"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "254:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "counter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "264:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "254:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "254:18:2"
                }
              ]
            },
            "functionSelector": "6dfe9e90",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loop24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "127:2:2"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "137:0:2"
            },
            "scope": 111,
            "src": "112:164:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 112,
        "src": "24:254:2"
      }
    ],
    "src": "0:279:2"
  },
  "bytecode": "608060405263011f1c0060005534801561001857600080fd5b5061014e806100286000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b5780636dfe9e9014610059575b600080fd5b610043610063565b604051610050919061009d565b60405180910390f35b610061610069565b005b60005481565b60008054905b601881101561009757610083600a836100a6565b91508061008f816100e7565b91505061006f565b50600055565b90815260200190565b600080821280156001600160ff1b03849003851316156100c8576100c8610102565b600160ff1b83900384128116156100e1576100e1610102565b50500190565b60006000198214156100fb576100fb610102565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200d2355e1ced973eb494659942de4e1c2a7b98ff85ea30dc77081edc6052e03c164736f6c63430008000033",
  "bytecodeSha1": "a848c4352401eb9aaf4295d148ccc89f0ea77fbb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Opt_simple2",
  "coverageMap": {
    "branches": {
      "2": {}
    },
    "statements": {
      "2": {
        "Opt_simple2.loop24": {
          "0": [
            228,
            242
          ],
          "1": [
            209,
            212
          ],
          "2": [
            254,
            272
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b5780636dfe9e9014610059575b600080fd5b610043610063565b604051610050919061009d565b60405180910390f35b610061610069565b005b60005481565b60008054905b601881101561009757610083600a836100a6565b91508061008f816100e7565b91505061006f565b50600055565b90815260200190565b600080821280156001600160ff1b03849003851316156100c8576100c8610102565b600160ff1b83900384128116156100e1576100e1610102565b50500190565b60006000198214156100fb576100fb610102565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200d2355e1ced973eb494659942de4e1c2a7b98ff85ea30dc77081edc6052e03c164736f6c63430008000033",
  "deployedSourceMap": "24:254:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;112:164;;;:::i;:::-;;51:29;;;;:::o;112:164::-;147:13;163:7;;;180:73;205:2;201:1;:6;180:73;;;228:14;240:2;228:14;;:::i;:::-;;-1:-1:-1;209:3:2;;;;:::i;:::-;;;;180:73;;;-1:-1:-1;254:7:2;:18;112:164::o;14:175:46:-;158:25;;;146:2;131:18;;113:76::o;194:267::-;;261:11;;;288:10;;-1:-1:-1;;;;;307:27:46;;;300:35;;284:52;281:2;;;339:18;;:::i;:::-;-1:-1:-1;;;386:19:46;;;379:27;;371:36;;368:2;;;410:18;;:::i;:::-;-1:-1:-1;;446:9:46;;241:220::o;466:135::-;;-1:-1:-1;;526:17:46;;523:2;;;546:18;;:::i;:::-;-1:-1:-1;593:1:46;582:13;;513:88::o;606:127::-;667:10;662:3;658:20;655:1;648:31;698:4;695:1;688:15;722:4;719:1;712:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    24,
    278
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x6DFE9E90 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 JUMPDEST PUSH1 0x18 DUP2 LT ISZERO PUSH2 0x97 JUMPI PUSH2 0x83 PUSH1 0xA DUP4 PUSH2 0xA6 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8F DUP2 PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6F JUMP JUMPDEST POP PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0xC8 JUMPI PUSH2 0xC8 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0xE1 JUMPI PUSH2 0xE1 PUSH2 0x102 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xFB JUMPI PUSH2 0xFB PUSH2 0x102 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x23 SSTORE 0xE1 0xCE 0xD9 PUSH20 0xEB494659942DE4E1C2A7B98FF85EA30DC77081ED 0xC6 SDIV 0x2E SUB 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61BC221A"
    },
    "38": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6DFE9E90"
    },
    "49": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "53": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        24,
        278
      ],
      "op": "REVERT",
      "path": "2"
    },
    "59": {
      "offset": [
        51,
        80
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "60": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43"
    },
    "63": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63"
    },
    "66": {
      "fn": null,
      "jump": "i",
      "offset": [
        51,
        80
      ],
      "op": "JUMP",
      "path": "2"
    },
    "67": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "68": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "70": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "71": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50"
    },
    "74": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D"
    },
    "79": {
      "fn": null,
      "jump": "i",
      "offset": [
        51,
        80
      ],
      "op": "JUMP",
      "path": "2"
    },
    "80": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "83": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "84": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "DUP1",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "SUB",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        51,
        80
      ],
      "op": "RETURN",
      "path": "2"
    },
    "89": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "90": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61"
    },
    "93": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69"
    },
    "96": {
      "fn": "Opt_simple2.loop24",
      "jump": "i",
      "offset": [
        112,
        276
      ],
      "op": "JUMP",
      "path": "2"
    },
    "97": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "98": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "STOP",
      "path": "2"
    },
    "99": {
      "offset": [
        51,
        80
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "100": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        51,
        80
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "102": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        51,
        80
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "103": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        51,
        80
      ],
      "op": "DUP2",
      "path": "2"
    },
    "104": {
      "fn": "Opt_simple2.loop24",
      "jump": "o",
      "offset": [
        51,
        80
      ],
      "op": "JUMP",
      "path": "2"
    },
    "105": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        112,
        276
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "106": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        147,
        160
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "108": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        163,
        170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "109": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        163,
        170
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "110": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        163,
        170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "111": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        205,
        207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x18"
    },
    "114": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        201,
        202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "115": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        201,
        207
      ],
      "op": "LT",
      "path": "2"
    },
    "116": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "117": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97"
    },
    "120": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "121": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        228,
        242
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 0,
      "value": "0x83"
    },
    "124": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        240,
        242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "126": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        228,
        242
      ],
      "op": "DUP4",
      "path": "2"
    },
    "127": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        228,
        242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6"
    },
    "130": {
      "fn": "Opt_simple2.loop24",
      "jump": "i",
      "offset": [
        228,
        242
      ],
      "op": "JUMP",
      "path": "2"
    },
    "131": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        228,
        242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "132": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        228,
        242
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "133": {
      "op": "POP"
    },
    "134": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 1
    },
    "135": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F"
    },
    "138": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "139": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "142": {
      "fn": "Opt_simple2.loop24",
      "jump": "i",
      "offset": [
        209,
        212
      ],
      "op": "JUMP",
      "path": "2"
    },
    "143": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "144": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "145": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "POP",
      "path": "2"
    },
    "146": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        209,
        212
      ],
      "op": "POP",
      "path": "2"
    },
    "147": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "150": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "151": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        180,
        253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "152": {
      "op": "POP"
    },
    "153": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        254,
        261
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x0"
    },
    "155": {
      "fn": "Opt_simple2.loop24",
      "offset": [
        254,
        272
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "156": {
      "fn": "Opt_simple2.loop24",
      "jump": "o",
      "offset": [
        112,
        276
      ],
      "op": "JUMP",
      "path": "2"
    },
    "157": {
      "op": "JUMPDEST"
    },
    "158": {
      "op": "SWAP1"
    },
    "159": {
      "op": "DUP2"
    },
    "160": {
      "op": "MSTORE"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "163": {
      "op": "ADD"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "jump": "o",
      "op": "JUMP"
    },
    "166": {
      "op": "JUMPDEST"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "169": {
      "op": "DUP1"
    },
    "170": {
      "op": "DUP3"
    },
    "171": {
      "op": "SLT"
    },
    "172": {
      "op": "DUP1"
    },
    "173": {
      "op": "ISZERO"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "180": {
      "op": "SHL"
    },
    "181": {
      "op": "SUB"
    },
    "182": {
      "op": "DUP5"
    },
    "183": {
      "op": "SWAP1"
    },
    "184": {
      "op": "SUB"
    },
    "185": {
      "op": "DUP6"
    },
    "186": {
      "op": "SGT"
    },
    "187": {
      "op": "AND"
    },
    "188": {
      "op": "ISZERO"
    },
    "189": {
      "op": "PUSH2",
      "value": "0xC8"
    },
    "192": {
      "op": "JUMPI"
    },
    "193": {
      "op": "PUSH2",
      "value": "0xC8"
    },
    "196": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "199": {
      "jump": "i",
      "op": "JUMP"
    },
    "200": {
      "op": "JUMPDEST"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "DUP4"
    },
    "207": {
      "op": "SWAP1"
    },
    "208": {
      "op": "SUB"
    },
    "209": {
      "op": "DUP5"
    },
    "210": {
      "op": "SLT"
    },
    "211": {
      "op": "DUP2"
    },
    "212": {
      "op": "AND"
    },
    "213": {
      "op": "ISZERO"
    },
    "214": {
      "op": "PUSH2",
      "value": "0xE1"
    },
    "217": {
      "op": "JUMPI"
    },
    "218": {
      "op": "PUSH2",
      "value": "0xE1"
    },
    "221": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "224": {
      "jump": "i",
      "op": "JUMP"
    },
    "225": {
      "op": "JUMPDEST"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "op": "ADD"
    },
    "229": {
      "op": "SWAP1"
    },
    "230": {
      "jump": "o",
      "op": "JUMP"
    },
    "231": {
      "op": "JUMPDEST"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "236": {
      "op": "NOT"
    },
    "237": {
      "op": "DUP3"
    },
    "238": {
      "op": "EQ"
    },
    "239": {
      "op": "ISZERO"
    },
    "240": {
      "op": "PUSH2",
      "value": "0xFB"
    },
    "243": {
      "op": "JUMPI"
    },
    "244": {
      "op": "PUSH2",
      "value": "0xFB"
    },
    "247": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "250": {
      "jump": "i",
      "op": "JUMP"
    },
    "251": {
      "op": "JUMPDEST"
    },
    "252": {
      "op": "POP"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "op": "SWAP1"
    },
    "257": {
      "jump": "o",
      "op": "JUMP"
    },
    "258": {
      "op": "JUMPDEST"
    },
    "259": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "264": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "266": {
      "op": "SHL"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "269": {
      "op": "MSTORE"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "279": {
      "op": "REVERT"
    }
  },
  "sha1": "95177f938b191c394adaecdd576cee9b2e6e598c",
  "source": "pragma solidity ^0.8.0;\ncontract Opt_simple2 {\n    int public counter = 18816000;\n\tconstructor()  {\n        \t}\n\tfunction loop24() public {\n        int  counter_ = counter;\n        for (uint256  i = 0;\ni < 24; i++) {\n            counter_ += 10;\n        }\ncounter = counter_;\n\t}\n}\n",
  "sourceMap": "24:254:2:-:0;;;72:8;51:29;;83:27;;;;;;;;;;24:254;;;;;;",
  "sourcePath": "contracts/optimized_contracts/Opt_simple2.sol",
  "type": "contract"
}