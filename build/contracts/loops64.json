{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "runLoop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "46": "contracts/verifiable_contracts_gpt/Loops64.sol"
  },
  "ast": {
    "absolutePath": "contracts/verifiable_contracts_gpt/Loops64.sol",
    "exportedSymbols": {
      "loops64": [
        1792
      ]
    },
    "id": 1793,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1755,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:46"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1792,
        "linearizedBaseContracts": [
          1792
        ],
        "name": "loops64",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1757,
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 1792,
            "src": "92:22:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1756,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "92:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "207:28:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1760,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1757,
                      "src": "217:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "227:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "217:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1763,
                  "nodeType": "ExpressionStatement",
                  "src": "217:11:46"
                }
              ]
            },
            "documentation": null,
            "id": 1765,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:46"
            },
            "returnParameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:46"
            },
            "scope": 1792,
            "src": "186:49:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1771,
              "nodeType": "Block",
              "src": "311:26:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "321:9:46",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1768,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1757,
                      "src": "321:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1770,
                  "nodeType": "ExpressionStatement",
                  "src": "321:9:46"
                }
              ]
            },
            "documentation": null,
            "id": 1772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:46"
            },
            "returnParameters": {
              "id": 1767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:0:46"
            },
            "scope": 1792,
            "src": "276:61:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1790,
              "nodeType": "Block",
              "src": "418:92:46",
              "statements": [
                {
                  "body": {
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "461:43:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1785,
                            "name": "incrementCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1772,
                            "src": "475:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "475:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1787,
                        "nodeType": "ExpressionStatement",
                        "src": "475:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1779,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "448:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3634",
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "452:2:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "448:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1789,
                  "initializationExpression": {
                    "assignments": [
                      1776
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1776,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "433:9:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1775,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1778,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "433:13:46"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "456:3:46",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1782,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1776,
                        "src": "456:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1784,
                    "nodeType": "ExpressionStatement",
                    "src": "456:3:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "428:76:46"
                }
              ]
            },
            "documentation": null,
            "id": 1791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "runLoop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:46"
            },
            "returnParameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:0:46"
            },
            "scope": 1792,
            "src": "392:118:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1793,
        "src": "25:487:46"
      }
    ],
    "src": "0:512:46"
  },
  "bytecode": "608060405234801561001057600080fd5b506000805560c8806100236000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806325609bee1460415780635b34b96614604957806361bc221a14604f575b600080fd5b60476067565b005b60476082565b6055608d565b60408051918252519081900360200190f35b60005b6040811015607f5760786082565b600101606a565b50565b600080546001019055565b6000548156fea265627a7a723158208af4320532800566b9fab524e58705ff22a8f7c91f1aeb294b5bef1b447e72e364736f6c63430005110032",
  "bytecodeSha1": "e37910ebbf35d5c9d91142784cffef9f60d1da86",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "loops64",
  "coverageMap": {
    "branches": {
      "46": {}
    },
    "statements": {
      "46": {
        "loops64.incrementCounter": {
          "2": [
            321,
            330
          ]
        },
        "loops64.runLoop": {
          "0": [
            475,
            493
          ],
          "1": [
            456,
            459
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c806325609bee1460415780635b34b96614604957806361bc221a14604f575b600080fd5b60476067565b005b60476082565b6055608d565b60408051918252519081900360200190f35b60005b6040811015607f5760786082565b600101606a565b50565b600080546001019055565b6000548156fea265627a7a723158208af4320532800566b9fab524e58705ff22a8f7c91f1aeb294b5bef1b447e72e364736f6c63430005110032",
  "deployedSourceMap": "25:487:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:487:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:118;;;:::i;:::-;;276:61;;;:::i;92:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;392:118;433:9;428:76;452:2;448:1;:6;428:76;;;475:18;:16;:18::i;:::-;456:3;;428:76;;;;392:118::o;276:61::-;321:7;:9;;;;;;276:61::o;92:22::-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    25,
    512
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25609BEE EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x5B34B966 EQ PUSH1 0x49 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x47 PUSH1 0x82 JUMP JUMPDEST PUSH1 0x55 PUSH1 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x7F JUMPI PUSH1 0x78 PUSH1 0x82 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP11 DELEGATECALL ORIGIN SDIV ORIGIN DUP1 SDIV PUSH7 0xB9FAB524E58705 SELFDESTRUCT 0x22 0xA8 0xF7 0xC9 0x1F BYTE 0xEB 0x29 0x4B JUMPDEST 0xEF SHL DIFFICULTY PUSH31 0x72E364736F6C63430005110032000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "10": {
      "op": "JUMPI"
    },
    "11": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13": {
      "op": "DUP1"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "REVERT",
      "path": "46"
    },
    "15": {
      "op": "JUMPDEST"
    },
    "16": {
      "offset": [
        25,
        512
      ],
      "op": "POP",
      "path": "46"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "LT",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x3C"
    },
    "23": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "24": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "27": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "SHR",
      "path": "46"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "DUP1",
      "path": "46"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x25609BEE"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "EQ",
      "path": "46"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x41"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "DUP1",
      "path": "46"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x5B34B966"
    },
    "46": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "EQ",
      "path": "46"
    },
    "47": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x49"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "DUP1",
      "path": "46"
    },
    "51": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x61BC221A"
    },
    "56": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "EQ",
      "path": "46"
    },
    "57": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4F"
    },
    "59": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "63": {
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "DUP1",
      "path": "46"
    },
    "64": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        512
      ],
      "op": "REVERT",
      "path": "46"
    },
    "65": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "66": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x47"
    },
    "68": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x67"
    },
    "70": {
      "fn": "loops64.runLoop",
      "jump": "i",
      "offset": [
        392,
        510
      ],
      "op": "JUMP",
      "path": "46"
    },
    "71": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "72": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "STOP",
      "path": "46"
    },
    "73": {
      "fn": "loops64.incrementCounter",
      "offset": [
        276,
        337
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "74": {
      "fn": "loops64.incrementCounter",
      "offset": [
        276,
        337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x47"
    },
    "76": {
      "fn": "loops64.incrementCounter",
      "offset": [
        276,
        337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x82"
    },
    "78": {
      "fn": "loops64.incrementCounter",
      "jump": "i",
      "offset": [
        276,
        337
      ],
      "op": "JUMP",
      "path": "46"
    },
    "79": {
      "offset": [
        92,
        114
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "80": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x55"
    },
    "82": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8D"
    },
    "84": {
      "fn": "loops64.incrementCounter",
      "jump": "i",
      "offset": [
        92,
        114
      ],
      "op": "JUMP",
      "path": "46"
    },
    "85": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "86": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "88": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "DUP1",
      "path": "46"
    },
    "89": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "90": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "91": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "DUP3",
      "path": "46"
    },
    "92": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "93": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "94": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "95": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "DUP2",
      "path": "46"
    },
    "96": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "97": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SUB",
      "path": "46"
    },
    "98": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "100": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "ADD",
      "path": "46"
    },
    "101": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "102": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "RETURN",
      "path": "46"
    },
    "103": {
      "fn": "loops64.runLoop",
      "offset": [
        392,
        510
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "104": {
      "fn": "loops64.runLoop",
      "offset": [
        433,
        442
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "106": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "107": {
      "fn": "loops64.runLoop",
      "offset": [
        452,
        454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "109": {
      "fn": "loops64.runLoop",
      "offset": [
        448,
        449
      ],
      "op": "DUP2",
      "path": "46"
    },
    "110": {
      "fn": "loops64.runLoop",
      "offset": [
        448,
        454
      ],
      "op": "LT",
      "path": "46"
    },
    "111": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "112": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x7F"
    },
    "114": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "115": {
      "fn": "loops64.runLoop",
      "offset": [
        475,
        493
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 0,
      "value": "0x78"
    },
    "117": {
      "fn": "loops64.runLoop",
      "offset": [
        475,
        491
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x82"
    },
    "119": {
      "fn": "loops64.runLoop",
      "jump": "i",
      "offset": [
        475,
        493
      ],
      "op": "JUMP",
      "path": "46"
    },
    "120": {
      "fn": "loops64.runLoop",
      "offset": [
        475,
        493
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "121": {
      "fn": "loops64.runLoop",
      "offset": [
        456,
        459
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 1,
      "value": "0x1"
    },
    "123": {
      "fn": "loops64.runLoop",
      "offset": [
        456,
        459
      ],
      "op": "ADD",
      "path": "46"
    },
    "124": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6A"
    },
    "126": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "JUMP",
      "path": "46"
    },
    "127": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "128": {
      "fn": "loops64.runLoop",
      "offset": [
        428,
        504
      ],
      "op": "POP",
      "path": "46"
    },
    "129": {
      "fn": "loops64.runLoop",
      "jump": "o",
      "offset": [
        392,
        510
      ],
      "op": "JUMP",
      "path": "46"
    },
    "130": {
      "fn": "loops64.incrementCounter",
      "offset": [
        276,
        337
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "131": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        328
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 2,
      "value": "0x0"
    },
    "133": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "DUP1",
      "path": "46"
    },
    "134": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "135": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "137": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "ADD",
      "path": "46"
    },
    "138": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "139": {
      "fn": "loops64.incrementCounter",
      "offset": [
        321,
        330
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "140": {
      "fn": "loops64.incrementCounter",
      "jump": "o",
      "offset": [
        276,
        337
      ],
      "op": "JUMP",
      "path": "46"
    },
    "141": {
      "offset": [
        92,
        114
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "142": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "144": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "145": {
      "fn": "loops64.incrementCounter",
      "offset": [
        92,
        114
      ],
      "op": "DUP2",
      "path": "46"
    },
    "146": {
      "fn": "loops64.incrementCounter",
      "jump": "o",
      "offset": [
        92,
        114
      ],
      "op": "JUMP",
      "path": "46"
    }
  },
  "sha1": "158491b8c7f10d8dca299514b1b9aeb479c58bf4",
  "source": "pragma solidity ^0.5.0;\n\ncontract loops64 {\n    // The storage variable for the counter\n    uint256 public counter;\n\n    // The constructor sets the initial value of counter to zero\n    constructor() public {\n        counter = 0;\n    }\n\n    // Increments the counter by 1\n    function incrementCounter() public {\n        counter++;\n    }\n\n    // This function runs a simple loop 64 times\n    function runLoop() public {\n        for (uint256 i = 0; i < 64; i++) {\n            incrementCounter();\n        }\n    }\n}",
  "sourceMap": "25:487:46:-;;;186:49;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;227:1:46;217:11;;25:487;;;;;;",
  "sourcePath": "contracts/verifiable_contracts_gpt/Loops64.sol",
  "type": "contract"
}