{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "8": "contracts/verifiable_contracts_gpt/Loops60.sol"
  },
  "ast": {
    "absolutePath": "contracts/verifiable_contracts_gpt/Loops60.sol",
    "exportedSymbols": {
      "loops60": [
        295
      ]
    },
    "id": 296,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 258,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 295,
        "linearizedBaseContracts": [
          295
        ],
        "name": "loops60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 260,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 295,
            "src": "74:12:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 259,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "74:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "133:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "143:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "153:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "143:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "143:11:8"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "123:2:8"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "133:0:8"
            },
            "scope": 295,
            "src": "112:49:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "239:26:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "249:9:8",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 271,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "249:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "249:9:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5b34b966",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCounter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:8"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:8"
            },
            "scope": 295,
            "src": "204:61:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "315:89:8",
              "statements": [
                {
                  "body": {
                    "id": 291,
                    "nodeType": "Block",
                    "src": "355:43:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 288,
                            "name": "incrementCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "369:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "369:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 290,
                        "nodeType": "ExpressionStatement",
                        "src": "369:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 282,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "342:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3630",
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "346:2:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "342:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 292,
                  "initializationExpression": {
                    "assignments": [
                      279
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 292,
                        "src": "330:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "330:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 281,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "339:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "330:10:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "350:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "350:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 287,
                    "nodeType": "ExpressionStatement",
                    "src": "350:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "325:73:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a92100cb",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loop",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:2:8"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:8"
            },
            "scope": 295,
            "src": "292:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 296,
        "src": "25:382:8"
      }
    ],
    "src": "0:407:8"
  },
  "bytecode": "6080604052348015600f57600080fd5b506000805560a1806100226000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80635b34b966146037578063a92100cb14603f575b600080fd5b603d6045565b005b603d6050565b600080546001019055565b60005b603c81101560685760616045565b6001016053565b5056fea2646970667358221220df1a7d198d51e61ae46f8c49fd808582cb42b9ba2704ac7aae6b18c4a7dee96064736f6c634300060c0033",
  "bytecodeSha1": "237673b7aa644414d2ad3837e25e4e8bec13f8bc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "loops60",
  "coverageMap": {
    "branches": {
      "8": {}
    },
    "statements": {
      "8": {
        "loops60.incrementCounter": {
          "0": [
            249,
            258
          ]
        },
        "loops60.loop": {
          "1": [
            369,
            387
          ],
          "2": [
            350,
            353
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c80635b34b966146037578063a92100cb14603f575b600080fd5b603d6045565b005b603d6050565b600080546001019055565b60005b603c81101560685760616045565b6001016053565b5056fea2646970667358221220df1a7d198d51e61ae46f8c49fd808582cb42b9ba2704ac7aae6b18c4a7dee96064736f6c634300060c0033",
  "deployedSourceMap": "25:382:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;204:61;;;:::i;:::-;;292:112;;;:::i;204:61::-;249:7;:9;;;;;;204:61::o;292:112::-;330:6;325:73;346:2;342:1;:6;325:73;;;369:18;:16;:18::i;:::-;350:3;;325:73;;;;292:112::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    407
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B34B966 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3D PUSH1 0x50 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3C DUP2 LT ISZERO PUSH1 0x68 JUMPI PUSH1 0x61 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x53 JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF BYTE PUSH30 0x198D51E61AE46F8C49FD808582CB42B9BA2704AC7AAE6B18C4A7DEE96064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "DUP1",
      "path": "8"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "REVERT",
      "path": "8"
    },
    "15": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "POP",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "LT",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "24": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "27": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "SHR",
      "path": "8"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "DUP1",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5B34B966"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "EQ",
      "path": "8"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "DUP1",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA92100CB"
    },
    "46": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "EQ",
      "path": "8"
    },
    "47": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "51": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "DUP1",
      "path": "8"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        407
      ],
      "op": "REVERT",
      "path": "8"
    },
    "55": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "56": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3D"
    },
    "58": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x45"
    },
    "60": {
      "fn": "loops60.incrementCounter",
      "jump": "i",
      "offset": [
        204,
        265
      ],
      "op": "JUMP",
      "path": "8"
    },
    "61": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "62": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "STOP",
      "path": "8"
    },
    "63": {
      "fn": "loops60.loop",
      "offset": [
        292,
        404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "64": {
      "fn": "loops60.loop",
      "offset": [
        292,
        404
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3D"
    },
    "66": {
      "fn": "loops60.loop",
      "offset": [
        292,
        404
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x50"
    },
    "68": {
      "fn": "loops60.loop",
      "jump": "i",
      "offset": [
        292,
        404
      ],
      "op": "JUMP",
      "path": "8"
    },
    "69": {
      "fn": "loops60.incrementCounter",
      "offset": [
        204,
        265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "70": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        256
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x0"
    },
    "72": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "73": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "74": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "76": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "ADD",
      "path": "8"
    },
    "77": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "78": {
      "fn": "loops60.incrementCounter",
      "offset": [
        249,
        258
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "79": {
      "fn": "loops60.incrementCounter",
      "jump": "o",
      "offset": [
        204,
        265
      ],
      "op": "JUMP",
      "path": "8"
    },
    "80": {
      "fn": "loops60.loop",
      "offset": [
        292,
        404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "81": {
      "fn": "loops60.loop",
      "offset": [
        330,
        336
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "83": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "84": {
      "fn": "loops60.loop",
      "offset": [
        346,
        348
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3C"
    },
    "86": {
      "fn": "loops60.loop",
      "offset": [
        342,
        343
      ],
      "op": "DUP2",
      "path": "8"
    },
    "87": {
      "fn": "loops60.loop",
      "offset": [
        342,
        348
      ],
      "op": "LT",
      "path": "8"
    },
    "88": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "89": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x68"
    },
    "91": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "92": {
      "fn": "loops60.loop",
      "offset": [
        369,
        387
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x61"
    },
    "94": {
      "fn": "loops60.loop",
      "offset": [
        369,
        385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x45"
    },
    "96": {
      "fn": "loops60.loop",
      "jump": "i",
      "offset": [
        369,
        387
      ],
      "op": "JUMP",
      "path": "8"
    },
    "97": {
      "fn": "loops60.loop",
      "offset": [
        369,
        387
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "98": {
      "fn": "loops60.loop",
      "offset": [
        350,
        353
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x1"
    },
    "100": {
      "fn": "loops60.loop",
      "offset": [
        350,
        353
      ],
      "op": "ADD",
      "path": "8"
    },
    "101": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x53"
    },
    "103": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "JUMP",
      "path": "8"
    },
    "104": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "105": {
      "fn": "loops60.loop",
      "offset": [
        325,
        398
      ],
      "op": "POP",
      "path": "8"
    },
    "106": {
      "fn": "loops60.loop",
      "jump": "o",
      "offset": [
        292,
        404
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "d2c5aa9a0583462a915e85b543f32f86370b698a",
  "source": "pragma solidity ^0.6.0;\n\ncontract loops60 {\n\n    // declare a counter\n    uint counter;\n\n    // constructor\n    constructor() public {\n        counter = 0;\n    }\n\n    // function to increment counter\n    function incrementCounter() public {\n        counter++;\n    }\n\n    // loop function\n    function loop() public {\n        for (uint i = 0; i < 60; i++) {\n            incrementCounter();\n        }\n    }\n\n}",
  "sourceMap": "25:382:8:-:0;;;112:49;;;;;;;;;-1:-1:-1;153:1:8;143:11;;25:382;;;;;;",
  "sourcePath": "contracts/verifiable_contracts_gpt/Loops60.sol",
  "type": "contract"
}