{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/unOptimized_contracts/simple1.sol"
  },
  "ast": {
    "absolutePath": "contracts/unOptimized_contracts/simple1.sol",
    "exportedSymbols": {
      "simple1": [
        20
      ]
    },
    "id": 21,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "simple1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 3,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 20,
            "src": "87:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 2,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "87:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "124:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "134:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_18816000_by_1",
                        "typeString": "int_const 18816000"
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_336000_by_1",
                          "typeString": "int_const 336000"
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_6000_by_1",
                            "typeString": "int_const 6000"
                          },
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "id": 9,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 7,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "144:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 8,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "149:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "144:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 10,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "152:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "144:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6000_by_1",
                            "typeString": "int_const 6000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3536",
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "155:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_56_by_1",
                            "typeString": "int_const 56"
                          },
                          "value": "56"
                        },
                        "src": "144:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_336000_by_1",
                          "typeString": "int_const 336000"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3536",
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "159:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_56_by_1",
                          "typeString": "int_const 56"
                        },
                        "value": "56"
                      },
                      "src": "144:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18816000_by_1",
                        "typeString": "int_const 18816000"
                      }
                    },
                    "src": "134:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "134:27:0"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "122:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "124:0:0"
            },
            "scope": 20,
            "src": "111:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21,
        "src": "64:106:0"
      }
    ],
    "src": "39:132:0"
  },
  "bytecode": "6080604052348015600f57600080fd5b5063011f1c00600055608c806100266000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806361bc221a14602d575b600080fd5b60336047565b604051603e9190604d565b60405180910390f35b60005481565b9081526020019056fea26469706673582212208cf74cdd9d38f3302c98beadc9bd5fa51ca0654526202be19f1e897b528457f064736f6c63430008000033",
  "bytecodeSha1": "4e993e13caa7146b246327870e6db4d8edf0dfd3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "simple1",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {}
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c806361bc221a14602d575b600080fd5b60336047565b604051603e9190604d565b60405180910390f35b60005481565b9081526020019056fea26469706673582212208cf74cdd9d38f3302c98beadc9bd5fa51ca0654526202be19f1e897b528457f064736f6c63430008000033",
  "deployedSourceMap": "64:106:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;14:175:1:-;158:25;;;146:2;131:18;;113:76::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    64,
    170
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xF7 0x4C 0xDD SWAP14 CODESIZE RETURN ADDRESS 0x2C SWAP9 0xBE 0xAD 0xC9 0xBD 0x5F 0xA5 SHR LOG0 PUSH6 0x4526202BE19F 0x1E DUP10 PUSH28 0x528457F064736F6C6343000800003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "POP",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "LT",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "24": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "27": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "SHR",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61BC221A"
    },
    "36": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "40": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        64,
        170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "45": {
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "46": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "48": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x47"
    },
    "50": {
      "fn": null,
      "jump": "i",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "54": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3E"
    },
    "57": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "58": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4D"
    },
    "61": {
      "fn": null,
      "jump": "i",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "62": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "65": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "67": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "68": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SUB",
      "path": "0"
    },
    "69": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "RETURN",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "74": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        87,
        105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "76": {
      "fn": null,
      "jump": "o",
      "offset": [
        87,
        105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "77": {
      "op": "JUMPDEST"
    },
    "78": {
      "op": "SWAP1"
    },
    "79": {
      "op": "DUP2"
    },
    "80": {
      "op": "MSTORE"
    },
    "81": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "83": {
      "op": "ADD"
    },
    "84": {
      "op": "SWAP1"
    },
    "85": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "978c3a8a7e07fd7344de558a05f6bc490d20666a",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract simple1 {\n    int public counter;\n    constructor(){\n        counter = 10 * 20*30*56 *56;\n    }\n}\n",
  "sourceMap": "64:106:0:-:0;;;111:57;;;;;;;;;-1:-1:-1;144:17:0;134:7;:27;64:106;;;;;;",
  "sourcePath": "contracts/unOptimized_contracts/simple1.sol",
  "type": "contract"
}